{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useCallback } from 'react';\nexport var useHttp = function useHttp() {\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var request = useCallback(function _callee(url) {\n    var method,\n        body,\n        headers,\n        response,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            method = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'GET';\n            body = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n            headers = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            setLoading(true);\n            _context.prev = 4;\n\n            if (body) {\n              body = JSON.stringify(body);\n              headers['Content-Type'] = 'application/json';\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: method,\n              body: body,\n              headers: headers\n            }));\n\n          case 8:\n            response = _context.sent;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            data = _context.sent;\n\n            if (response.ok) {\n              _context.next = 14;\n              break;\n            }\n\n            throw new Error(data.message || 'Что-то пошло не так');\n\n          case 14:\n            setLoading(false);\n            return _context.abrupt(\"return\", data);\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](4);\n            setLoading(false);\n            setError(_context.t0.message);\n            throw _context.t0;\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 18]], Promise);\n  }, []);\n  var clearError = useCallback(function () {\n    return setError(null);\n  }, []);\n  return {\n    error: error,\n    clearError: clearError,\n    loading: loading,\n    request: request\n  };\n};","map":{"version":3,"sources":["/Users/kir/projects/mern-demo/next-client/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACGF,QAAQ,CAAC,KAAD,CADX;AAAA,MACpBG,OADoB;AAAA,MACXC,UADW;;AAAA,mBAEDJ,QAAQ,CAAC,IAAD,CAFP;AAAA,MAEpBK,KAFoB;AAAA,MAEbC,QAFa;;AAI3B,MAAMC,OAAO,GAAGN,WAAW,CAAC,iBAAOO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYC,YAAAA,MAAZ,2DAAqB,KAArB;AAA4BC,YAAAA,IAA5B,2DAAmC,IAAnC;AAAyCC,YAAAA,OAAzC,2DAAmD,EAAnD;AAC1BP,YAAAA,UAAU,CAAC,IAAD,CAAV;AAD0B;;AAIxB,gBAAGM,IAAH,EAAS;AACPA,cAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,cAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACD;;AAPuB;AAAA,6CASDG,KAAK,CAACN,GAAD,EAAO;AAAEC,cAAAA,MAAM,EAANA,MAAF;AAAUC,cAAAA,IAAI,EAAJA,IAAV;AAAgBC,cAAAA,OAAO,EAAPA;AAAhB,aAAP,CATJ;;AAAA;AASlBI,YAAAA,QATkB;AAAA;AAAA,6CAULA,QAAQ,CAACC,IAAT,EAVK;;AAAA;AAUlBC,YAAAA,IAVkB;;AAAA,gBAYpBF,QAAQ,CAACG,EAZW;AAAA;AAAA;AAAA;;AAAA,kBAahB,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAL,IAAgB,qBAA1B,CAbgB;;AAAA;AAgBxBhB,YAAAA,UAAU,CAAC,KAAD,CAAV;AAhBwB,6CAiBjBa,IAjBiB;;AAAA;AAAA;AAAA;AAoBxBb,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,YAAAA,QAAQ,CAAC,YAAEc,OAAH,CAAR;AArBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAwBxB,EAxBwB,CAA3B;AA0BA,MAAMC,UAAU,GAAGpB,WAAW,CAAC;AAAA,WAAMK,QAAQ,CAAC,IAAD,CAAd;AAAA,GAAD,EAAuB,EAAvB,CAA9B;AAEA,SAAO;AAAED,IAAAA,KAAK,EAALA,KAAF;AAASgB,IAAAA,UAAU,EAAVA,UAAT;AAAqBlB,IAAAA,OAAO,EAAPA,OAArB;AAA8BI,IAAAA,OAAO,EAAPA;AAA9B,GAAP;AACD,CAjCM","sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if(body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url,  { method, body, headers });\n      const data = await response.json();\n\n      if(!response.ok) {\n        throw new Error(data.message || 'Что-то пошло не так');\n      }\n      \n      setLoading(false);\n      return data;\n\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { error, clearError, loading, request };\n}\n"]},"metadata":{},"sourceType":"module"}