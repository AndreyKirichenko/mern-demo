{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nconst STORAGE_NAME = 'userData';\nexport const useAuth = () => {\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(null);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    localStorage.setItem(STORAGE_NAME, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(STORAGE_NAME);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(STORAGE_NAME));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n\n    setReady(true);\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId,\n    ready\n  };\n};","map":{"version":3,"sources":["/Users/kir/projects/mern-demo/next-client/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","STORAGE_NAME","useAuth","token","setToken","ready","setReady","userId","setUserId","login","jwtToken","id","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG,UAArB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMW,KAAK,GAAGV,WAAW,CAAC,CAACW,QAAD,EAAWC,EAAX,KAAkB;AAC1CP,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACAF,IAAAA,SAAS,CAACG,EAAD,CAAT;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqBZ,YAArB,EAAmCa,IAAI,CAACC,SAAL,CAAe;AAChDR,MAAAA,MAAM,EAAEI,EADwC;AAEhDR,MAAAA,KAAK,EAAEO;AAFyC,KAAf,CAAnC;AAID,GARwB,EAQtB,EARsB,CAAzB;AAUA,QAAMM,MAAM,GAAGjB,WAAW,CAAC,MAAM;AAC/BK,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,YAAY,CAACK,UAAb,CAAwBhB,YAAxB;AACD,GAJyB,EAIvB,EAJuB,CAA1B;AAMAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBnB,YAArB,CAAX,CAAb;;AAEA,QAAGiB,IAAI,IAAIA,IAAI,CAACf,KAAhB,EAAuB;AACrBM,MAAAA,KAAK,CAACS,IAAI,CAACf,KAAN,EAAae,IAAI,CAACX,MAAlB,CAAL;AACD;;AAEDD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GARQ,EAQN,CAACG,KAAD,CARM,CAAT;AAUA,SAAO;AAAEA,IAAAA,KAAF;AAASO,IAAAA,MAAT;AAAiBb,IAAAA,KAAjB;AAAwBI,IAAAA,MAAxB;AAAgCF,IAAAA;AAAhC,GAAP;AACD,CAhCM","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nconst STORAGE_NAME = 'userData';\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n\n    localStorage.setItem(STORAGE_NAME, JSON.stringify({\n      userId: id, \n      token: jwtToken,\n    }))\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(STORAGE_NAME);\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(STORAGE_NAME));\n\n    if(data && data.token) {\n      login(data.token, data.userId);\n    }\n\n    setReady(true);\n  }, [login]);\n\n  return { login, logout, token, userId, ready };\n};"]},"metadata":{},"sourceType":"module"}