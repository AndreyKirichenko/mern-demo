{"ast":null,"code":"var _jsxFileName = \"/Users/kir/projects/mern-demo/next-client/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Box, Button, Container, Grid, Paper, TextField, Typography, makeStyles } from '@material-ui/core';\nimport { useSnackbar } from 'material-ui-snackbar-provider';\nimport { useHttp } from '../hooks/http.hook';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    paddingTop: theme.spacing(8),\n    paddingRight: theme.spacing(4),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nconst LoginPage = () => {\n  const classes = useStyles();\n  const {\n    error,\n    loading,\n    request,\n    clearError\n  } = useHttp();\n\n  const loginHandler = () => {\n    console.log('loginHandler');\n    const element = document.body;\n    return ReactDOM.createPortal(__jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"FUUUUUUUUCCCCCCKKKKKKKK\"), element);\n  };\n\n  const message = useMessage();\n  useEffect(() => {\n    const element = document.getElementById('root-portal');\n    ReactDOM.createPortal(__jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"FUUUUUUUUCCCCCCKKKKKKKK\"), element); // message('fuuuccckkk');\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Login\"), __jsx(Box, {\n    mb: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(TextField, {\n    required: true,\n    id: \"email\",\n    label: \"E-mail\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(TextField, {\n    required: true,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: loginHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Sign in\"))))));\n};\n\nLoginPage.getInitialProps = () => {\n  return {};\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/kir/projects/mern-demo/next-client/pages/login.js"],"names":["React","useEffect","ReactDOM","Box","Button","Container","Grid","Paper","TextField","Typography","makeStyles","useSnackbar","useHttp","useStyles","theme","paper","paddingTop","spacing","paddingRight","paddingBottom","paddingLeft","LoginPage","classes","error","loading","request","clearError","loginHandler","console","log","element","document","body","createPortal","message","useMessage","getElementById","getInitialProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Box, Button, Container, Grid, Paper, TextField, Typography, makeStyles } from '@material-ui/core';\nimport { useSnackbar } from 'material-ui-snackbar-provider'\n\nimport { useHttp } from '../hooks/http.hook';\n\nconst useStyles = makeStyles( theme => ({\n  paper: {\n    paddingTop: theme.spacing(8),\n    paddingRight: theme.spacing(4),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(4),\n  }\n}));\n\nconst LoginPage = () => {\n  const classes = useStyles();\n  \n  const { error, loading, request, clearError } = useHttp();\n\n  const loginHandler = () => {\n    console.log('loginHandler');\n    const element = document.body;\n    return ReactDOM.createPortal(<div>FUUUUUUUUCCCCCCKKKKKKKK</div>, element);\n  };\n\n  const message = useMessage();\n\n  useEffect(() => {\n    const element = document.getElementById('root-portal');\n    ReactDOM.createPortal(<div>FUUUUUUUUCCCCCCKKKKKKKK</div>, element);\n    // message('fuuuccckkk');\n  }, []);\n\n  return (\n    <Container>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={8} md={6} lg={4}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\">\n              Login\n            </Typography>\n\n            <Box mb={4}>\n              <TextField\n                required\n                id=\"email\"\n                label=\"E-mail\"\n                fullWidth\n                margin=\"normal\"\n              />\n\n              <TextField\n                required\n                id=\"standard-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                fullWidth\n                margin=\"normal\"\n              />\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={loginHandler}\n              >\n                Sign in\n              </Button> \n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nLoginPage.getInitialProps = () => {\n  return {};\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}